@maintheme-color:#f8f8f8;
@mainfont-color:#858585;
@mainborder-info:1px solid #dfdfdf;


html, body{
    font-family: 'Poppins', sans-serif;
}

.main{
    width: 100%; 
    height: 100%;
    background: #f7f7f9;
    max-height: 100%;
    max-width: 100%;
    margin: auto;
    position: absolute;
    top:0;bottom:0; /* vertical center */
    left:0;right:0; /* horizontal center */
}
.sideBar{
    background:@maintheme-color;
}

.josephs-nav {
    list-style-type: none;
    padding: 0;
    background:url(Images/navbg.png);
    background-size:cover;
    overflow: auto;
    width: 7%;
    margin: auto;
    top:0;bottom:0; /* vertical center */
    float:left;
    font-size:24px;
    position: fixed;
    top: 0;

}

li a {
    display: block;
    color: #000;
    padding: 8px 16px;
    text-decoration: none;
}

li a.active {
    text-decoration:none;
    color: white;
    background-color:#163a37;

}

li a:hover:not(.active) {
    text-decoration:none;
    color: white;
    background-color:#163a37;
}

.toprow{
    background: #fff;
    height:48px;
    width:93%;
    position: fixed;    
    float:right;
    border:@mainborder-info;
    vertical-align:central;
    box-shadow: 0px 4px 4px 0px rgba(233, 240, 243, 0.5), 0 0 0 0px #E6ECF8;
    margin-left:7%;
    top: 0;
    z-index: 99;

}



.title{
    font-size:24px;
    padding-top:6px;
    padding-left:30px;
    float:left;
}
.content {
    background: #f7f7f9;
    
    margin: auto;
    top:0;
}
.header-module{
    background: #fff;
    height:50px;
    width:45%;
    position: relative;    
    float:right;
    border:@mainborder-info;
    vertical-align:central;
    margin-right:1%;
    margin-top:60px;
    box-shadow: 0px 4px 4px 0px rgba(233, 240, 243, 0.5), 0 0 0 0px #E6ECF8;
}

.text1{
    font-size:24px;
    padding-top:5px;
    padding-left:30px;
}
.text2{
    font-size:24px;
    padding-top:5px;
    padding-left:30px;
    color:@mainfont-color;
}
.text3{
    font-size:20px;
    padding-top:5px;
    padding-left:10px;
    color:@mainfont-color;
    &:hover{
        color:white;
        cursor: pointer;
    }
}
.headeruserinfo{
    display:none;
    float:left;
    margin-left:10px;
    font-size:24px;
    color:@mainfont-color;
    padding-top:5px;
  }
  .showhide { 
     display:block;
  }


.config{
    background: #fff;
    height:auto;
    width:90%;
    position: relative;    
    float:right;
    //border:@mainborder-info;
    vertical-align:central;
    margin-right:1%;
    margin-top:1%;
 
}

.gridContainer{
    background: #fff;
    height:100%;
    width:100%;
    position: relative;
    display: -webkit-flex; /* Safari */
    display: flex;
    flex-wrap: wrap;
    //box-shadow: 0px 4px 4px 0px rgba(233, 240, 243, 0.5), 0 0 0 0px #E6ECF8;
}

.grid{
    background: #fff;
    width:18%;
    position: relative;    
    float:right;
    border:@mainborder-info;
    vertical-align:central;
    margin:5px;

/*
    width:16%;
    height:47%;
    margin:5px;
    border:1px solid #dfdfdf;
    display: -webkit-flex; /* Safari
    display: flex; */
}

.imgs{
    width:218px;
}
//Create a "guared" mixin with conditional test
.mixin-loop (@i) when (@i > 0){
    //Output current counter
    .vehicleimg@{i}{
        background: url('Images/BMW_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop(14);

.vehicleModel{
    float:left;
}

//Create a "guared" mixin with conditional test
.mixin-loop2 (@i) when (@i > 0){
    //Output current counter
    .grid-@{i}{
        background-color:rgba(255, 255, 255, 1);
        width:220px;
        position: relative;    
        float:right;
        border:@mainborder-info;
        vertical-align:central;
        margin-right:5px;
        margin-bottom:5px;
        box-shadow: 0px 4px 4px 0px rgba(233, 240, 243, 0.5), 0 0 0 0px #E6ECF8;

        &:hover{
            background-color:#2e4f4d;
            cursor: pointer;
        }
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop2(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop2(14);



//Create a "guared" mixin with conditional test
.mixin-loop-1series (@i) when (@i > 0){
    //Output current counter
    .oneseriesimg@{i}{
        background: url('Images/1series/1-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-1series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-1series(4);


//Create a "guared" mixin with conditional test
.mixin-loop-2series (@i) when (@i > 0){
    //Output current counter
    .twoseriesimg@{i}{
        background: url('Images/2series/2-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-2series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-2series(7);


//Create a "guared" mixin with conditional test
.mixin-loop-3series (@i) when (@i > 0){
    //Output current counter
    .threeseriesimg@{i}{
        background: url('Images/3series/3-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-3series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-3series(4);


//Create a "guared" mixin with conditional test
.mixin-loop-4series (@i) when (@i > 0){
    //Output current counter
    .fourseriesimg@{i}{
        background: url('Images/4series/4-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-4series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-4series(3);

//Create a "guared" mixin with conditional test
.mixin-loop-5series (@i) when (@i > 0){
    //Output current counter
    .fiveseriesimg@{i}{
        background: url('Images/5series/5-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-5series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-5series(3);


//Create a "guared" mixin with conditional test
.mixin-loop-6series (@i) when (@i > 0){
    //Output current counter
    .sixseriesimg@{i}{
        background: url('Images/6series/6-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-6series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-6series(1);

//Create a "guared" mixin with conditional test
.mixin-loop-7series (@i) when (@i > 0){
    //Output current counter
    .sevenseriesimg@{i}{
        background: url('Images/7series/7-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-7series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-7series(3);


//Create a "guared" mixin with conditional test
.mixin-loop-8series (@i) when (@i > 0){
    //Output current counter
    .eightseriesimg@{i}{
        background: url('Images/8series/8-series_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-8series(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-8series(3);

//Create a "guared" mixin with conditional test
.mixin-loop-Xmodels (@i) when (@i > 0){
    //Output current counter
    .Xmodelsimg@{i}{
        background: url('Images/xmodels/Xmodels_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-Xmodels(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-Xmodels(12);

//Create a "guared" mixin with conditional test
.mixin-loop-mperform (@i) when (@i > 0){
    //Output current counter
    .mperformimg@{i}{
        background: url('Images/mperform/mperform_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-mperform(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-mperform(12);

//Create a "guared" mixin with conditional test
.mixin-loop-m (@i) when (@i > 0){
    //Output current counter
    .mimg@{i}{
        background: url('Images/m/m_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-m(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-m(5);



//Create a "guared" mixin with conditional test
.mixin-loop-iperform (@i) when (@i > 0){
    //Output current counter
    .iperformimg@{i}{
        background: url('Images/iperform/iperform_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-iperform(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-iperform(3);

//Create a "guared" mixin with conditional test
.mixin-loop-i (@i) when (@i > 0){
    //Output current counter
    .i_img@{i}{
        background: url('Images/i/i_@{i}.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }
    //The mixin calls itself, rescursively until the "@i > 0" condition is no longer met
    .mixin-loop-i(@i - 1);
}
//Call the mixin with a counter to start the loop
.mixin-loop-i(3);


.z4img1{
        background: url('Images/z4/z4_1.png');
        background-repeat: no-repeat;
        background-size: contain;
        width:100%;
        height:100%;
    }




.joseph-spin:hover {
    animation: joseph-spin 2.5s infinite linear;
  }
  @keyframes joseph-spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(359deg);
    }
  }